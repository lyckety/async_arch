# https://github.com/bitnami/containers/tree/main/bitnami/kafka

version: "2"

services:
  zookeeper1:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "12181:2181"
    volumes:
      - "./volumes/zookeeper1_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: on-failure

  kafka1:
    image: docker.io/bitnami/kafka:3.4
    ports:
      # - "19092:9092"
      # needed for external access
      - "19093:9093"
    volumes:
      - "./volumes/kafka1_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
      - KAFKA_CFG_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      # needed for external access (else external clients get resolve problems)
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092,EXTERNAL://localhost:19093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    restart: on-failure
    depends_on:
      - zookeeper1

  kafka2:
    image: docker.io/bitnami/kafka:3.4
    ports:
      # - "29092:9092"
      # needed for external access
      - "29093:9093"
    volumes:
      - "./volumes/kafka2_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
      - KAFKA_CFG_BROKER_ID=2
      - ALLOW_PLAINTEXT_LISTENER=yes
      # needed for external access (else external clients get resolve problems)
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:9092,EXTERNAL://localhost:29093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    restart: on-failure
    depends_on:
      - zookeeper1

  kafka3:
    image: docker.io/bitnami/kafka:3.4
    ports:
      # - "39092:9092"
      # needed for external access
      - "39093:9093"
    volumes:
      - "./volumes/kafka3_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
      - KAFKA_CFG_BROKER_ID=3
      - ALLOW_PLAINTEXT_LISTENER=yes
      # needed for external access (else external clients get resolve problems)
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:9092,EXTERNAL://localhost:39093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper1

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9092,kafka3:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka1"

volumes:
  zookeeper1_data:
    driver: local
  kafka1_data:
    driver: local
  kafka2_data:
    driver: local
  kafka3_data:
    driver: local

# KAFKA_LISTENERS: INT://kafka:9092,EXT://0.0.0.0:9093
# KAFKA_ADVERTISED_LISTENERS: INT://kafka:9092,EXT://localhost:9093
